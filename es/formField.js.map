{"version":3,"file":"formField.js","sourceRoot":"","sources":["../src/formField.ts"],"names":[],"mappings":"AAWA,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,KAAK,GAAG,EAAE,EAAE,UAA6B,IAAI,EAAa,EAAE;IACpF,MAAM,SAAS,GAA+B,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,OAAO,CAAA;IAE1F,OAAO;QACL,KAAK;QACL,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,CAAE,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAS,CAAC,CAAC,CAAC,OAAO;QAC3F,SAAS,EAAE,SAAgB;KAC5B,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { Derive } from 'overmind'\n\nexport interface FormField {\n  value: string\n  isPristine: boolean\n  isValid: boolean\n  showError: boolean\n}\n\nexport type IsValid = (value: string) => boolean\n\nexport const formField = (value = '', isValid: boolean | IsValid = true): FormField => {\n  const showError: Derive<boolean, FormField> = field => !field.isPristine && !field.isValid\n\n  return {\n    value,\n    isPristine: true,\n    isValid: typeof isValid === 'function' ? ((field => isValid(field.value)) as any) : isValid,\n    showError: showError as any\n  }\n}\n"]}